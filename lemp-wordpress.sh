#
# Follow this script to install LEMP stack with WordPress on DigitalOcean
# Tested on: 16.04, nginx, php7
#

adduser web
gpasswd -a web sudo

sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade
sudo apt-get install nginx

#
# Check if web is running
#

sudo apt-get install mysql-server
#sudo mysql_install_db - Deprecated
sudo mysql_secure_installation

#
# Enter MySQL root password, change it if you like, otherwise N.
# Everything else enter, enter.
#

#sudo apt-get install php5-fpm php5-mysql
sudo apt-get install php-fpm php-mysql # for PHP7

sudo nano /etc/php5/fpm/php.ini

#
# Fix to: cgi.fix_pathinfo=0
#

#sudo service php5-fpm restart
sudo systemctl restart php7.0-fpm

#
# Nginx to use PHP
#

sudo nano /etc/nginx/sites-available/default

#
# Save this
#

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

#
# Default server configuration PHP7
#

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.php index.html index.htm index.nginx-debian.html;

    server_name <server_domain_or_IP>;

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}

#
# Default server configuration PHP5
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

	server_name <your-site.com>;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

#
# TEST PHP
#

sudo nano /var/www/html/info.php

#
# Enter this
#

<?php
phpinfo();
?>

#
# Remove test file
#

sudo rm /var/www/html/info.php

#
# Restart
#

#sudo service nginx restart
systemctl reload nginx

#
# Install Wordpress, first database
#

mysql -u root -p

CREATE DATABASE <yourdb>;
CREATE USER <youruser>@localhost IDENTIFIED BY '<Password>'; # Web
GRANT ALL PRIVILEGES ON <yourdb>.* TO <youruser>@localhost
FLUSH PRIVILEGES;
exit

#
# WordPress files
#

cd ~
wget http://wordpress.org/latest.tar.gz
tar xzvf latest.tar.gz

sudo apt-get update
#sudo apt-get install php5-gd libssh2-php # PHP7
sudo apt-get install php-gd php-ssh2 # PHP7

#
# WordPress config
#

cd ~/wordpress
mv wp-config-sample.php wp-config.php
nano wp-config.php

#
# In file
#

/** The name of the database for WordPress */
define('DB_NAME', '<yourdb>');

/** MySQL database username */
define('DB_USER', '<youruser>');

/** MySQL database password */
define('DB_PASSWORD', '<dbpassword>');

#
# Copy files to /var/www/html
#

sudo rsync -avP ~/wordpress/ /var/www/html/

cd /var/www/html/
sudo chown -R web:www-data /var/www/html/*
mkdir wp-content/uploads

sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/<your-site>
sudo nano /etc/nginx/sites-available/<your-site>

#
# Set paths and stuff 
#

root /var/www/html; ### PATH
index index.php index.html index.htm; ### INDEX.PHP must be first

server_name <your-site>; ### DOMAIN NAME

location / {
        # try_files $uri $uri/ =404;
        try_files $uri $uri/ /index.php?q=$uri&$args; ### TO REDIRECT URLS
}

#
# End
#

sudo ln -s /etc/nginx/sites-available/<your-site.com> /etc/nginx/sites-enabled/
sudo rm /etc/nginx/sites-enabled/default

sudo service nginx restart
#sudo service php5-fpm restart
sudo systemctl restart php7.0-fpm

#
# Open site and install WordPress
#

#
# Fix Request Entity Too Large
#

sudo nano /etc/nginx/nginx.conf

# set client body size to 2M #
client_max_body_size 10M;

#
# Fix PHP upload_max_filesize
#

#sudo nano /etc/php5/fpm/php.ini
sudo nano /etc/php/7.0/fpm/php.ini

upload_max_filesize = 10M

#
# Fix Directory not Writable
#

cd /var/www/html
sudo chown www-data:www-data -R * 

cd wp-content

sudo chmod -R 0755 plugins
sudo chmod -R 0755 uploads
sudo chmod -R 0755 upgrade

sudo systemctl restart nginx
#sudo service php5-fpm restart
sudo systemctl restart php7.0-fpm
